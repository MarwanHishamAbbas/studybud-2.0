// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String         @id @default(cuid())
  createdrooms  Room[]         @relation("CreatedBy")
  subscriptions Subscription[]
  posts         Post[]
  comments      Comment[]
}

model Subscription {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId    String
  createdAt DateTime @default(now())

  @@id([userId, roomId])
}

model Room {
  id          String         @id @default(cuid())
  name        String         @unique
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  posts       Post[]
  creator     User?          @relation("CreatedBy", fields: [creatorId], references: [id])
  creatorId   String?
  subscribers Subscription[]
  topic       String

  @@index([name])
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   Json?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    String
  comments  Comment[]
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String

  commentId String?
}
